import sqlite3

try:
    table = sqlite3.connect("schoolData.db")
    db = table.cursor()

    # CREATE TABLES

    db.execute('''CREATE TABLE STUDENTS (STUDENT_ID INTEGER PRIMARY KEY, STUDENT_FIRST_NAME TEXT, STUDENT_LAST_NAME TEXT)''')
        
    db.execute('''CREATE TABLE STUDENT_DETAILS (STUDENT_ID INTEGER PRIMARY KEY, YEAR_GROUP TEXT, DATE_OF_BIRTH DATETIME, EMERGENCY_PHONE INTEGER, EMERGENCY_EMAIL EMAIL, FOREIGN KEY(STUDENT_ID) REFERENCES STUDENTS(STUDENT_ID)) ''')

    db.execute('''CREATE TABLE TEACHERS (TEACHERS_ID INTEGER PRIMARY KEY, TEACHERS_NAME TEXT)''')

    db.execute('''CREATE TABLE COURSES (COURSE_ID INTEGER PRIMARY KEY, COURSE_NAME TEXT, TEACHERS_ID INTEGER, STUDENT_ID INTEGER, FOREIGN KEY(TEACHERS_ID) REFERENCES TEACHERS(TEACHERS_ID), FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT_COURSE_JOIN(STUDENT_ID))''')

    db.execute('''CREATE TABLE STUDENT_COURSE_JOIN (STUDENT_ID INTEGER, COURSE_ID INTEGER, PRIMARY KEY (STUDENT_ID, COURSE_ID), FOREIGN KEY(STUDENT_ID) REFERENCES STUDENTS(STUDENT_ID), FOREIGN KEY(COURSE_ID) REFERENCES COURSES(COURSE_ID))''')

    db.execute('''CREATE TABLE GRADES (STUDENT_ID INTEGER PRIMARY KEY, COURSE_ID INTEGER, ASSIGNMENT_NAME TEXT, GRADE TEXT, DATE_GRADED DATETIME, FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT_COURSE_JOIN(STUDENT_ID), FOREIGN KEY(COURSE_ID) REFERENCES STUDENT_COURSE_JOIN(COURSE_ID))''')

    db.execute('''CREATE TABLE ATTENDANCE (STUDENT_ID INTEGER PRIMARY KEY, COURSE_ID INTEGER, DAY_ATTENDANCE INTEGER, TOTAL_ATTENDANCE INTEGER, FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT_COURSE_JOIN(STUDENT_ID), FOREIGN KEY(COURSE_ID) REFERENCES STUDENT_COURSE_JOIN(COURSE_ID))''')

finally:

    table = sqlite3.connect("schoolData.db")
    db = table.cursor()

    # TESTS VALID INSERTS

    db.execute("INSERT INTO STUDENTS (STUDENT_ID, STUDENT_FIRST_NAME, STUDENT_LAST_NAME) VALUES (1, 'DYLAN', 'MIDDLETON')")
    db.execute("INSERT INTO STUDENT_DETAILS (STUDENT_ID, YEAR_GROUP, DATE_OF_BIRTH, EMERGENCY_PHONE, EMERGENCY_EMAIL) VALUES (1, '13', '30/11/2006', '999', 'dylan@gmail.com')")
    db.execute("INSERT INTO TEACHERS (TEACHERS_ID, TEACHERS_NAME) VALUES (100, 'Joe Vass')")
    db.execute("INSERT INTO COURSES (COURSE_ID, COURSE_NAME, TEACHERS_ID, STUDENT_ID) VALUES (1000, 'SOFTWARE', 100, 1)")
    db.execute("INSERT INTO STUDENT_COURSE_JOIN (STUDENT_ID, COURSE_ID) VALUES (1, 1000)")
    db.execute("INSERT INTO GRADES (STUDENT_ID, COURSE_ID, ASSIGNMENT_NAME, GRADE, DATE_GRADED) VALUES (1, 1000, 'WEB_APP_STORY', 'Merit', '20/11/2024')")
    db.execute("INSERT INTO ATTENDANCE (STUDENT_ID, COURSE_ID, DAY_ATTENDANCE, TOTAL_ATTENDANCE) VALUES (1, 1000, 1, 3)")

    # TESTS INVALID INSERTS

    # db.execute("INSERT INTO STUDENTS (STUDENT_ID, STUDENT_FIRST_NAME, STUDENT_LAST_NAME) VALUES ('STRING', 12 , 13)")
    # db.execute("INSERT INTO STUDENT_DETAILS (STUDENT_ID, YEAR_GROUP, DATE_OF_BIRTH, EMERGENCY_PHONE, EMERGENCY_EMAIL) VALUES ('STRING', 13, 2006, 999, 90012)")
    # db.execute("INSERT INTO TEACHERS (TEACHERS_ID, TEACHERS_NAME) VALUES ('STRING', 27)")
    # db.execute("INSERT INTO COURSES (COURSE_ID, COURSE_NAME, TEACHERS_ID, STUDENT_ID) VALUES ('STRING', 4000, 'STRING', 'STRING')")
    # db.execute("INSERT INTO STUDENT_COURSE_JOIN (STUDENT_ID, COURSE_ID) VALUES ('STRING', 'STRING')")
    # db.execute("INSERT INTO GRADES (STUDENT_ID, COURSE_ID, ASSIGNMENT_NAME, GRADE, DATE_GRADED) VALUES ('STRING', 'STRING', 6000, 7000000000, 9000)")
    # db.execute("INSERT INTO ATTENDANCE (STUDENT_ID, COURSE_ID, DAY_ATTENDANCE, TOTAL_ATTENDANCE) VALUES ('STRING', 'STRING', 'STRING', 'STRING')")

    # COMMIT ALL THE CHANGES TO THE DATABASE
    table.commit()
    table.close()
